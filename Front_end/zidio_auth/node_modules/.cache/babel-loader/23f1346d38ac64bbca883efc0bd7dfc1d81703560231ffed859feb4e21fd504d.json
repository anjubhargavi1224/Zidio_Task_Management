{"ast":null,"code":"var _jsxFileName = \"F:\\\\zidio task management\\\\Zidio_Task_Management\\\\Front_end\\\\zidio_auth\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport AuthForm from \"./components/AuthForm\";\nimport TaskManagement from \"./components/TaskManagement\";\nimport AdminPanel from \"./pages/AdminPanel\";\n\n// Function to check user role\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAdmin = () => {\n  const role = localStorage.getItem(\"userRole\");\n  // return role === \"admin\" || role === \"engineer\";  // Only specific roles can access admin panel\n\n  //disable the code \n  // Bypass for developers in local development\n  if (process.env.NODE_ENV === \"development\") {\n    return true;\n  }\n  return role === \"admin\" || role === \"engineer\";\n};\n\n// Protected Route Component\nconst ProtectedRoute = ({\n  element\n}) => {\n  return isAdmin() ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 32\n  }, this); // Redirect unauthorized users\n};\n_c = ProtectedRoute;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tasks\",\n        element: /*#__PURE__*/_jsxDEV(TaskManagement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          element: /*#__PURE__*/_jsxDEV(AdminPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","AuthForm","TaskManagement","AdminPanel","jsxDEV","_jsxDEV","isAdmin","role","localStorage","getItem","process","env","NODE_ENV","ProtectedRoute","element","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","children","path","_c2","$RefreshReg$"],"sources":["F:/zidio task management/Zidio_Task_Management/Front_end/zidio_auth/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport AuthForm from \"./components/AuthForm\";\r\nimport TaskManagement from \"./components/TaskManagement\";\r\nimport AdminPanel from \"./pages/AdminPanel\";\r\n\r\n// Function to check user role\r\nconst isAdmin = () => {\r\n  const role = localStorage.getItem(\"userRole\");\r\n  // return role === \"admin\" || role === \"engineer\";  // Only specific roles can access admin panel\r\n    \r\n  //disable the code \r\n  // Bypass for developers in local development\r\nif (process.env.NODE_ENV === \"development\") {\r\n  return true;\r\n}\r\n\r\nreturn role === \"admin\" || role === \"engineer\";\r\n};\r\n\r\n// Protected Route Component\r\nconst ProtectedRoute = ({ element }) => {\r\n  return isAdmin() ? element : <Navigate to=\"/\" />; // Redirect unauthorized users\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<AuthForm />} />\r\n        <Route path=\"/tasks\" element={<TaskManagement />} />\r\n        <Route path=\"/admin\" element={<ProtectedRoute element={<AdminPanel />} />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,UAAU,MAAM,oBAAoB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC7C;;EAEA;EACA;EACF,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C,OAAO,IAAI;EACb;EAEA,OAAOL,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,UAAU;AAC9C,CAAC;;AAED;AACA,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,OAAOR,OAAO,CAAC,CAAC,GAAGQ,OAAO,gBAAGT,OAAA,CAACL,QAAQ;IAACe,EAAE,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;AACpD,CAAC;AAACC,EAAA,GAFIP,cAAc;AAIpB,SAASQ,GAAGA,CAAA,EAAG;EACb,oBACEhB,OAAA,CAACR,MAAM;IAAAyB,QAAA,eACLjB,OAAA,CAACP,MAAM;MAAAwB,QAAA,gBACLjB,OAAA,CAACN,KAAK;QAACwB,IAAI,EAAC,GAAG;QAACT,OAAO,eAAET,OAAA,CAACJ,QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCd,OAAA,CAACN,KAAK;QAACwB,IAAI,EAAC,QAAQ;QAACT,OAAO,eAAET,OAAA,CAACH,cAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpDd,OAAA,CAACN,KAAK;QAACwB,IAAI,EAAC,QAAQ;QAACT,OAAO,eAAET,OAAA,CAACQ,cAAc;UAACC,OAAO,eAAET,OAAA,CAACF,UAAU;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACK,GAAA,GAVQH,GAAG;AAYZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}